name: Publish package and release

on:
  push:
    branches: ["main"]

permissions:
  contents: write
  packages: write

jobs:
  get_package_version:
    runs-on: ubuntu-latest

    outputs:
      version_package: ${{ steps.step_version.outputs.VERSION_PACKAGE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get package version
        id: step_version
        run: |
          versionNumber="$(cat package.json | jq -r '.version')";
          echo 'VERSION_PACKAGE='$versionNumber >> $GITHUB_OUTPUT

  publish_package_github:
    runs-on: "ubuntu-latest"
    needs: get_package_version

    steps:
      - name: Show last package version
        run: echo "VERSION_PACKAGE="v${{ needs.get_package_version.outputs.version_package }} >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://npm.pkg.github.com/"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependences
        run: npm ci

      - name: Publish on Github
        # if: ${{ env.VERSION_PACKAGE != 'v0.0.0' }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_package_npm:
    runs-on: "ubuntu-latest"
    needs: [get_package_version, publish_package_github]

    steps:
      - name: Show last package version
        run: echo "VERSION_PACKAGE="v${{ needs.get_package_version.outputs.version_package }} >> $GITHUB_ENV

      # - name: Account Configuration
      #   run: |
      #     git config --global user.email "mauriciomuller2012@gmail.com" &&
      #     git config --global user.name "maummuler"

      # - name: Setup Node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: "16.x"
      #     registry-url: "https://registry.npmjs.org"

      # - name: Checkout code
      #   uses: actions/checkout@v3

      # - name: Install Dependences
      #   run: npm ci

      # - name: Publish on NPM
      #   if: ${{ env.VERSION_PACKAGE != 'v0.0.0' }}
      #   run: npm publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_NPM }}

  create_realese:
    runs-on: ubuntu-latest
    needs: [get_package_version, publish_package_npm]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get last package version by JOBS
        run: echo "VERSION_PACKAGE="v${{ needs.get_package_version.outputs.version_package }} >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create realease
        if: ${{ env.VERSION_PACKAGE != 'v0.0.0' }}
        run: gh release create $VERSION_PACKAGE -t "$VERSION_PACKAGE" -F ./.github/template/RELEASE.md --latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
