name: Generate a new release

on:
  push:
    branches: ["main"]

permissions:
  contents: write
  packages: write

env:
  ver_teste: "v0.0.1"

jobs:
  # upgrade_package_version:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "16.x"

  #     - name: Account Configuration
  #       run: |
  #         git config --global user.email "mauriciomuller2012@gmail.com" &&
  #         git config --global user.name "maummuler"

  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Get Package Version
  #       run: |
  #         versionNumber="$(cat package.json | jq -r '.version')";
  #         echo 'VERSION_PACKAGE='$versionNumber >> $GITHUB_ENV
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Check Numbers Of Version
  #       run: |
  #         firstValue=$VERSION_PACKAGE:0:1;
  #         secondValue=$VERSION_PACKAGE:2:1;
  #         thirtyValue=$VERSION_PACKAGE:4:1;

  #         if [[ $firstValue =~ [0] ]]; then npm version major; fi;
  #         if [[ $thirtyValue =~ [0-8] ]]; then npm version patch; else npm version minor; fi;
  #         if [[ $secondValue =~ [9] ]]; then npm version major; fi;

  #     - name: Push new version to main
  #       run: git push -u origin main

  #     - name: Get new package version
  #       run: |
  #         versionNumber="$(cat package.json | jq -r '.version')";
  #         echo 'VERSION_PACKAGE='$versionNumber >> $GITHUB_ENV
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_realese:
    runs-on: ubuntu-latest
    # needs: upgrade_package_version
    steps:
      - name: Show last package version
        run: echo $VERSION_PACKAGE

      - name: Create realease
        run: gh release create v$ver_teste -F '/.github/template/RELEASE.md'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
